name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # The below action is for the current repo in which the workflow is being triggered to get cloned.
    - name: Checkout code
      uses: actions/checkout@v2
    # You define a step with uses if it's executing an action or you define a step with run if it's executing a shell script.  
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Run Tests
      run: |
        python manage.py test

  deploy:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Deploy to EB
    # This action provides necessary processes to be automated - see readme
      uses: einaregilsson/beanstalk-deploy@v20
      with:
      # encapsulatng sensitive information thorugh github secrets - 
      # we get the id-key pair from aws and put them in secrets in actions in setting
      # We have to create access keys in aws in security credentials - IAM, keys can be created for root user or genera user.
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # providing name of the application and environment name from aws
        application_name: cicd-pipeline
        environment_name: Cicdpipeline-env
        version_label: 12348
        region: "us-east-2"
        deployment_package: deploy.zip
